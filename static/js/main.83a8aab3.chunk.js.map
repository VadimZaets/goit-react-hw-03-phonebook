{"version":3,"sources":["components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Form","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","onSubmit","this","type","onChange","Component","ContactList","contacts","onRemoveContact","map","contact","onClick","id","Filter","onChangeFilter","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83a8aab3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form  onSubmit={this.handleSubmit}>\r\n        <label >\r\n          Name\r\n          <input\r\n            \r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label >\r\n          Number\r\n          <input\r\n           \r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button  type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul >\r\n    {contacts.map((contact) => (\r\n      <li key={contact.id}>\r\n        {contact.name + \":\" + contact.number}\r\n        {\r\n          <button\r\n       \r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};","import { Component } from \"react\";\nimport Form from \"./components/Form/Form\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\"\nimport { v4 as uuidv4 } from \"uuid\";\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <Form onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        \n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n  \n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}