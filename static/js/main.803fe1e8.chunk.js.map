{"version":3,"sources":["components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Form","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","type","onChange","ContactList","contacts","onRemoveContact","map","contact","onClick","id","Filter","onChangeFilter","App","setContacts","filter","setFilter","visibleContacts","toLowerCase","includes","onAddContact","task","cont","alert","length","uuidv4","prevState","contactID","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA8DeA,EAzDF,WACX,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAQIC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAKJ,OACE,uBAAOC,SAzBY,SAACH,GACrBA,EAAEI,kBAwBD,UACE,yCAEE,uBAEEC,KAAK,OACLV,KAAK,OACLO,MAAOP,EACPW,SAAUP,OAGd,2CAEE,uBAEEM,KAAK,OACLV,KAAK,SACLO,MAAOL,EACPS,SAAUP,OAGd,wBAASM,KAAK,SAAd,6BCxBOE,EA5BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,SAACC,GAAD,OACZ,+BACGA,EAAQhB,KAAO,IAAMgB,EAAQd,OAE5B,wBAEEQ,KAAK,SACLV,KAAK,QACLiB,QAAS,kBAAMH,EAAgBE,EAAQE,KAJzC,sBAHKF,EAAQE,UCHR,SAASC,EAAT,GAA4C,IAA1BZ,EAAyB,EAAzBA,MAAOa,EAAkB,EAAlBA,eACtC,OACE,wDAEE,uBACEV,KAAK,OACLH,MAAOA,EACPI,SAAU,SAACN,GAAD,OAAOe,EAAef,EAAEC,OAAOC,a,YCsDlCc,EAxDH,WACV,MAAgCtB,mBAAS,IAAzC,mBAAOc,EAAP,KAAiBS,EAAjB,KACA,EAA4BvB,mBAAS,IAArC,mBAAOwB,EAAP,KAAeC,EAAf,KAiCMC,EARGZ,EAASU,QAAO,SAACV,GAAD,OACrBA,EAASb,KAAK0B,cAAcC,SAASJ,EAAOG,kBAQhD,OACE,gCACE,2CAEA,cAAC,EAAD,CAAME,aApCS,SAACC,GAKlB,GAJmBhB,EAChBE,KAAI,SAACe,GAAD,OAAUA,EAAK9B,QACnB2B,SAASE,EAAK7B,MAGf+B,MAAM,GAAD,OAAIF,EAAK7B,KAAT,iCACA,GAAyB,IAArB6B,EAAK7B,KAAKgC,OACnBD,MAAM,8BACD,CACL,IAAMf,EAAO,2BACRa,GADQ,IAEXX,GAAIe,gBAENX,GAAY,SAAAY,GAAS,4BAAQA,GAAR,CAAmBlB,WAuBxC,0CAEA,cAACG,EAAD,CAAQZ,MAAOgB,EAAQH,eArBN,SAACG,GACpBC,EAAU,CAAED,cAsBTE,EAAgBO,OAAS,GACxB,cAAC,EAAD,CACEnB,SAAUY,EACVX,gBAhBc,SAACqB,GACrBb,EAAYT,EAASU,QAAO,qBAAGL,KAAgBiB,aCnCnDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.803fe1e8.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\n\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n     e.preventDefault();\r\n\r\n\r\n   };\r\n\r\nconst handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n   \r\n  };\r\n    return (\r\n      <form  onSubmit={handleSubmit}>\r\n        <label >\r\n          Name\r\n          <input\r\n            \r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label >\r\n          Number\r\n          <input\r\n           \r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button  type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n\r\n};\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul >\r\n    {contacts.map((contact) => (\r\n      <li key={contact.id}>\r\n        {contact.name + \":\" + contact.number}\r\n        {\r\n          <button\r\n       \r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};","import { useState } from \"react\";\r\nimport Form from \"./components/Form/Form\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n   \r\n  const addContact = (task) => {\r\n    const searchName = contacts\r\n      .map((cont) => cont.name)\r\n      .includes(task.name);\r\n\r\n    if (searchName) {\r\n      alert(`${task.name} is already in contacts`);\r\n    } else if (task.name.length === 0) {\r\n      alert(\"Fields must be filled!\");\r\n    } else {\r\n      const contact = {\r\n        ...task,\r\n        id: uuidv4(),\r\n      };\r\n      setContacts(prevState => [...prevState, contact]);\r\n    }\r\n  };\r\n\r\n  const changeFilter = (filter) => {\r\n    setFilter({ filter });\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    return contacts.filter((contacts) =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const removeContact = (contactID) => {\r\n    setContacts(contacts.filter(({ id }) => id !== contactID));\r\n  };\r\n  const visibleContacts = getVisibleContacts();\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n\r\n      <Form onAddContact={addContact} />\r\n      <h2>Contacts</h2>\r\n        \r\n      <Filter value={filter} onChangeFilter={changeFilter} />\r\n  \r\n      {visibleContacts.length > 0 && (\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onRemoveContact={removeContact}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}